{"version":3,"file":"dx-react-grid.es.js","sources":["../src/plugins/grid-core.jsx","../src/grid.jsx","../src/plugins/column-chooser.jsx","../src/utils/state-helper.js","../src/plugins/filtering-state.jsx","../src/plugins/integrated-filtering.jsx","../src/plugins/editing-state.jsx","../src/plugins/paging-state.jsx","../src/plugins/integrated-paging.jsx","../src/plugins/custom-paging.jsx","../src/plugins/grouping-state.jsx","../src/plugins/integrated-grouping.jsx","../src/plugins/custom-grouping.jsx","../src/plugins/selection-state.jsx","../src/plugins/integrated-selection.jsx","../src/plugins/sorting-state.jsx","../src/plugins/integrated-sorting.jsx","../src/plugins/drag-drop-provider.jsx","../src/plugins/table-column-reordering.jsx","../src/plugins/table.jsx","../src/plugins/table-selection.jsx","../src/plugins/row-detail-state.jsx","../src/plugins/table-row-detail.jsx","../src/plugins/table-group-row.jsx","../src/plugins/table-header-row.jsx","../src/plugins/table-filter-row.jsx","../src/plugins/table-edit-row.jsx","../src/plugins/table-edit-column.jsx","../src/plugins/table-column-resizing.jsx","../src/plugins/paging-panel.jsx","../src/plugins/grouping-panel.jsx","../src/plugins/data-type-provider.jsx","../src/plugins/table-column-visibility.jsx","../src/components/table-layout.jsx","../src/components/table-layout/column-group.jsx","../src/components/table-layout/row-layout.jsx","../src/components/table-layout/virtual-table-utils.js","../src/components/table-layout/virtual-table-layout.jsx","../src/components/table-layout/rows-block-layout.jsx","../src/components/table-layout/static-table-layout.jsx","../src/components/group-panel-layout/item-layout.jsx","../src/components/group-panel-layout.jsx","../src/plugins/toolbar.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginContainer, Getter, Template, TemplatePlaceholder } from '@devexpress/dx-react-core';\nimport { rowIdGetter, cellValueGetter } from '@devexpress/dx-grid-core';\n\nexport class GridCore extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      getRowId,\n      getCellValue,\n      rootComponent: Root,\n    } = this.props;\n\n    return (\n      <PluginContainer>\n        <Getter name=\"rows\" value={rows} />\n        <Getter name=\"getRowId\" value={rowIdGetter(getRowId, rows)} />\n        <Getter name=\"columns\" value={columns} />\n        <Getter name=\"getCellValue\" value={cellValueGetter(getCellValue, columns)} />\n        <Template name=\"header\" />\n        <Template name=\"body\" />\n        <Template name=\"footer\" />\n        <Template name=\"root\">\n          <Root>\n            <TemplatePlaceholder name=\"header\" />\n            <TemplatePlaceholder name=\"body\" />\n            <TemplatePlaceholder name=\"footer\" />\n          </Root>\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nGridCore.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n};\n\nGridCore.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginHost } from '@devexpress/dx-react-core';\nimport { GridCore } from './plugins/grid-core';\n\nexport const Grid = ({\n  rows,\n  columns,\n  getRowId,\n  getCellValue,\n  rootComponent,\n  children,\n}) => (\n  <PluginHost>\n    <GridCore\n      rows={rows}\n      columns={columns}\n      getRowId={getRowId}\n      getCellValue={getCellValue}\n      rootComponent={rootComponent}\n    />\n    {children}\n  </PluginHost>\n);\n\nGrid.propTypes = {\n  rows: PropTypes.array.isRequired,\n  getRowId: PropTypes.func,\n  getCellValue: PropTypes.func,\n  columns: PropTypes.array.isRequired,\n  rootComponent: PropTypes.func.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nGrid.defaultProps = {\n  getRowId: undefined,\n  getCellValue: undefined,\n  children: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, PluginContainer, TemplateConnector,\n} from '@devexpress/dx-react-core';\n\nimport { getMessagesFormatter, columnChooserItems } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'TableColumnVisibility' },\n  { pluginName: 'Toolbar' },\n];\nexport class ColumnChooser extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: false,\n    };\n\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleHide = this.handleHide.bind(this);\n    this.buttonRef = this.buttonRef.bind(this);\n  }\n  buttonRef(button) {\n    this.button = button;\n  }\n  handleToggle() {\n    this.setState({ visible: !this.state.visible });\n  }\n  handleHide() {\n    this.setState({ visible: false });\n  }\n  render() {\n    const {\n      overlayComponent: Overlay,\n      containerComponent: Container,\n      itemComponent: Item,\n      toggleButtonComponent: ToggleButton,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { visible } = this.state;\n\n    return (\n      <PluginContainer\n        pluginName=\"ColumnChooser\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ columns, hiddenColumns }, { toggleColumnVisibility }) => (\n              <React.Fragment>\n                <ToggleButton\n                  buttonRef={this.buttonRef}\n                  onToggle={this.handleToggle}\n                  getMessage={getMessage}\n                />\n                <Overlay\n                  visible={visible}\n                  target={this.button}\n                  onHide={this.handleHide}\n                >\n                  <Container>\n                    {columnChooserItems(columns, hiddenColumns)\n                      .map(item => (\n                        <Item\n                          key={item.column.name}\n                          item={item}\n                          onToggle={() => toggleColumnVisibility(item.column.name)}\n                        />\n                    ))}\n                  </Container>\n                </Overlay>\n              </React.Fragment>\n            )}\n          </TemplateConnector>\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nColumnChooser.propTypes = {\n  overlayComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  toggleButtonComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nColumnChooser.defaultProps = {\n  messages: {},\n};\n","export const createStateHelper = (component) => {\n  let lastStateUpdater = null;\n  let initialState = null;\n\n  const applyReducer = (reduce, payload, callback) => {\n    const stateUpdater = (prevState) => {\n      const state = {\n        ...component.getState(prevState),\n        ...(component.state !== prevState ? prevState : null),\n      };\n      if (initialState === null) {\n        initialState = state;\n      }\n      const nextState = { ...state, ...reduce(state, payload) };\n\n      if (typeof callback === 'function') {\n        callback(nextState, state);\n      }\n      if (stateUpdater === lastStateUpdater) {\n        component.notifyStateChange(nextState, initialState);\n        initialState = null;\n      }\n\n      return nextState;\n    };\n    lastStateUpdater = stateUpdater;\n    component.setState(stateUpdater);\n  };\n  const applyFieldReducer = (field, reduce, payload) => {\n    applyReducer(state => ({\n      [field]: reduce(state[field], payload),\n    }));\n  };\n\n  return {\n    applyReducer,\n    applyFieldReducer,\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setColumnFilter } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class FilteringState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filters: props.defaultFilters || [],\n    };\n    const stateHelper = createStateHelper(this);\n\n    this.setColumnFilter = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'filters', setColumnFilter);\n  }\n  getState() {\n    return {\n      ...this.state,\n      filters: this.props.filters || this.state.filters,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { filters } = nextState;\n    const { onFiltersChange } = this.props;\n    if (onFiltersChange && filters !== state.filters) {\n      onFiltersChange(filters);\n    }\n  }\n  render() {\n    const { filters } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"FilteringState\"\n      >\n        <Getter name=\"filters\" value={filters} />\n        <Action name=\"setColumnFilter\" action={this.setColumnFilter} />\n      </PluginContainer>\n    );\n  }\n}\n\nFilteringState.propTypes = {\n  filters: PropTypes.array,\n  defaultFilters: PropTypes.array,\n  onFiltersChange: PropTypes.func,\n};\n\nFilteringState.defaultProps = {\n  filters: undefined,\n  defaultFilters: undefined,\n  onFiltersChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport { filteredRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'FilteringState' },\n];\n\nexport class IntegratedFiltering extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnPredicate = columnName =>\n      getColumnExtension(columnExtensions, columnName).predicate;\n\n    const rowsComputed = ({\n      rows,\n      filters,\n      getCellValue,\n      isGroupRow,\n      getRowLevelKey,\n    }) =>\n      filteredRows(rows, filters, getCellValue, getColumnPredicate, isGroupRow, getRowLevelKey);\n\n    return (\n      <PluginContainer\n        pluginName=\"IntegratedFiltering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nIntegratedFiltering.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedFiltering.defaultProps = {\n  columnExtensions: undefined,\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  createRowChangeGetter,\n\n  startEditRows,\n  stopEditRows,\n\n  addRow,\n  changeAddedRow,\n  cancelAddedRows,\n  addedRowsByIds,\n\n  changeRow,\n  cancelChanges,\n  changedRowsByIds,\n\n  deleteRows,\n  cancelDeletedRows,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class EditingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editingRows: props.defaultEditingRows || [],\n      addedRows: props.defaultAddedRows || [],\n      changedRows: props.defaultChangedRows || {},\n      deletedRows: props.defaultDeletedRows || [],\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.startEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRows', startEditRows);\n    this.stopEditRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'editingRows', stopEditRows);\n\n    this.changeRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'changedRows', changeRow);\n    this.cancelChangedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'changedRows', cancelChanges);\n    this.commitChangedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        changed: changedRowsByIds(this.getState().changedRows, rowIds),\n      });\n      this.cancelChangedRows({ rowIds });\n    };\n\n    this.addRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', addRow);\n    this.changeAddedRow = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', changeAddedRow);\n    this.cancelAddedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'addedRows', cancelAddedRows);\n    this.commitAddedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({\n        added: addedRowsByIds(this.getState().addedRows, rowIds),\n      });\n      this.cancelAddedRows({ rowIds });\n    };\n\n    this.deleteRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRows', deleteRows);\n    this.cancelDeletedRows = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'deletedRows', cancelDeletedRows);\n    this.commitDeletedRows = ({ rowIds }) => {\n      this.props.onCommitChanges({ deleted: rowIds });\n      this.cancelDeletedRows({ rowIds });\n    };\n  }\n  getState() {\n    return {\n      ...this.state,\n      editingRows: this.props.editingRows || this.state.editingRows,\n      changedRows: this.props.changedRows || this.state.changedRows,\n      addedRows: this.props.addedRows || this.state.addedRows,\n      deletedRows: this.props.deletedRows || this.state.deletedRows,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { editingRows } = nextState;\n    const { onEditingRowsChange } = this.props;\n    if (onEditingRowsChange && editingRows !== state.editingRows) {\n      onEditingRowsChange(editingRows);\n    }\n\n    const { changedRows } = nextState;\n    const { onChangedRowsChange } = this.props;\n    if (onChangedRowsChange && changedRows !== state.changedRows) {\n      onChangedRowsChange(changedRows);\n    }\n\n    const { addedRows } = nextState;\n    const { onAddedRowsChange } = this.props;\n    if (onAddedRowsChange && addedRows !== state.addedRows) {\n      onAddedRowsChange(addedRows);\n    }\n\n    const { deletedRows } = nextState;\n    const { onDeletedRowsChange } = this.props;\n    if (onDeletedRowsChange && deletedRows !== state.deletedRows) {\n      onDeletedRowsChange(deletedRows);\n    }\n  }\n  render() {\n    const { createRowChange, columnExtensions } = this.props;\n    const {\n      editingRows, changedRows, addedRows, deletedRows,\n    } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"EditingState\"\n      >\n        <Getter\n          name=\"createRowChange\"\n          value={createRowChangeGetter(createRowChange, columnExtensions)}\n        />\n\n        <Getter name=\"editingRows\" value={editingRows} />\n        <Action name=\"startEditRows\" action={this.startEditRows} />\n        <Action name=\"stopEditRows\" action={this.stopEditRows} />\n\n        <Getter name=\"changedRows\" value={changedRows} />\n        <Action name=\"changeRow\" action={this.changeRow} />\n        <Action name=\"cancelChangedRows\" action={this.cancelChangedRows} />\n        <Action name=\"commitChangedRows\" action={this.commitChangedRows} />\n\n        <Getter name=\"addedRows\" value={addedRows} />\n        <Action name=\"addRow\" action={this.addRow} />\n        <Action name=\"changeAddedRow\" action={this.changeAddedRow} />\n        <Action name=\"cancelAddedRows\" action={this.cancelAddedRows} />\n        <Action name=\"commitAddedRows\" action={this.commitAddedRows} />\n\n        <Getter name=\"deletedRows\" value={deletedRows} />\n        <Action name=\"deleteRows\" action={this.deleteRows} />\n        <Action name=\"cancelDeletedRows\" action={this.cancelDeletedRows} />\n        <Action name=\"commitDeletedRows\" action={this.commitDeletedRows} />\n      </PluginContainer>\n    );\n  }\n}\n\nEditingState.propTypes = {\n  createRowChange: PropTypes.func,\n  columnExtensions: PropTypes.array,\n\n  editingRows: PropTypes.array,\n  defaultEditingRows: PropTypes.array,\n  onEditingRowsChange: PropTypes.func,\n\n  addedRows: PropTypes.array,\n  defaultAddedRows: PropTypes.array,\n  onAddedRowsChange: PropTypes.func,\n\n  changedRows: PropTypes.object,\n  defaultChangedRows: PropTypes.object,\n  onChangedRowsChange: PropTypes.func,\n\n  deletedRows: PropTypes.array,\n  defaultDeletedRows: PropTypes.array,\n  onDeletedRowsChange: PropTypes.func,\n\n  onCommitChanges: PropTypes.func.isRequired,\n};\n\nEditingState.defaultProps = {\n  createRowChange: undefined,\n  columnExtensions: undefined,\n\n  editingRows: undefined,\n  defaultEditingRows: [],\n  onEditingRowsChange: undefined,\n\n  changedRows: undefined,\n  defaultChangedRows: {},\n  onChangedRowsChange: undefined,\n\n  addedRows: undefined,\n  defaultAddedRows: [],\n  onAddedRowsChange: undefined,\n\n  deletedRows: undefined,\n  defaultDeletedRows: [],\n  onDeletedRowsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setCurrentPage, setPageSize } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class PagingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentPage: props.defaultCurrentPage,\n      pageSize: props.defaultPageSize,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.setCurrentPage = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'currentPage', setCurrentPage);\n    this.setPageSize = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'pageSize', setPageSize);\n  }\n  getState() {\n    return {\n      ...this.state,\n      currentPage: this.props.currentPage || this.state.currentPage,\n      pageSize: this.props.pageSize || this.state.pageSize,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { currentPage } = nextState;\n    const { onCurrentPageChange } = this.props;\n    if (onCurrentPageChange && currentPage !== state.currentPage) {\n      onCurrentPageChange(currentPage);\n    }\n\n    const { pageSize } = nextState;\n    const { onPageSizeChange } = this.props;\n    if (onPageSizeChange && pageSize !== state.pageSize) {\n      onPageSizeChange(pageSize);\n    }\n  }\n  render() {\n    const { pageSize, currentPage } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"PagingState\"\n      >\n        <Getter name=\"currentPage\" value={currentPage} />\n        <Getter name=\"pageSize\" value={pageSize} />\n        <Action name=\"setCurrentPage\" action={this.setCurrentPage} />\n        <Action name=\"setPageSize\" action={this.setPageSize} />\n      </PluginContainer>\n    );\n  }\n}\n\nPagingState.propTypes = {\n  pageSize: PropTypes.number,\n  defaultPageSize: PropTypes.number,\n  onPageSizeChange: PropTypes.func,\n  currentPage: PropTypes.number,\n  defaultCurrentPage: PropTypes.number,\n  onCurrentPageChange: PropTypes.func,\n};\n\nPagingState.defaultProps = {\n  pageSize: undefined,\n  defaultPageSize: 10,\n  onPageSizeChange: undefined,\n  currentPage: undefined,\n  defaultCurrentPage: 0,\n  onCurrentPageChange: undefined,\n};\n","import React from 'react';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport { paginatedRows, rowsWithPageHeaders, pageCount, rowCount } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'PagingState' },\n];\n\nconst clamp = (value, max) => Math.max(Math.min(value, max), 0);\n\nconst rowsWithHeadersComputed = ({ rows, pageSize, getRowLevelKey }) =>\n  rowsWithPageHeaders(rows, pageSize, getRowLevelKey);\nconst totalCountComputed = ({ rows }) => rowCount(rows);\nconst paginatedRowsComputed = ({ rows, pageSize, currentPage }) =>\n  paginatedRows(rows, pageSize, currentPage);\nconst currentPageComputed = ({ currentPage, totalCount, pageSize }, { setCurrentPage }) => {\n  const totalPages = pageCount(totalCount, pageSize);\n  const adjustedCurrentPage = clamp(currentPage, totalPages - 1);\n  if (totalPages - 1 < currentPage) {\n    setCurrentPage(adjustedCurrentPage);\n  }\n  return adjustedCurrentPage;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class IntegratedPaging extends React.PureComponent {\n  render() {\n    return (\n      <PluginContainer\n        pluginName=\"IntegratedPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsWithHeadersComputed} />\n        <Getter name=\"totalCount\" computed={totalCountComputed} />\n        <Getter name=\"currentPage\" computed={currentPageComputed} />\n        <Getter name=\"rows\" computed={paginatedRowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\n\nconst pluginDependencies = [\n  { pluginName: 'PagingState' },\n];\n\nexport class CustomPaging extends React.PureComponent {\n  render() {\n    const { totalCount } = this.props;\n\n    return (\n      <PluginContainer\n        pluginName=\"CustomPaging\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"totalCount\" value={totalCount} />\n      </PluginContainer>\n    );\n  }\n}\n\nCustomPaging.propTypes = {\n  totalCount: PropTypes.number,\n};\n\nCustomPaging.defaultProps = {\n  totalCount: 0,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  groupByColumn,\n  toggleExpandedGroups,\n  draftGrouping,\n  draftGroupingChange,\n  cancelGroupingChange,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst dependencies = [\n  { pluginName: 'SortingState', optional: true },\n];\n\nconst adjustSortIndex = (sortIndex, grouping, sorting) =>\n  Math.max(\n    grouping.slice(0, sortIndex).reduce(\n      (acc, columnGrouping) => {\n        const columnSortingIndex = sorting.findIndex(columnSorting =>\n          columnSorting.columnName === columnGrouping.columnName);\n        return (columnSortingIndex === -1 ? acc - 1 : acc);\n      },\n      sortIndex,\n    ),\n    0,\n  );\n\nexport class GroupingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      grouping: props.defaultGrouping,\n      groupingChange: null,\n      expandedGroups: props.defaultExpandedGroups,\n    };\n\n    this.stateHelper = createStateHelper(this);\n\n    this.groupByColumn = this.groupByColumn.bind(this);\n    this.toggleGroupExpanded = this.stateHelper.applyReducer\n      .bind(this.stateHelper, toggleExpandedGroups);\n    this.draftGroupingChange = this.stateHelper.applyReducer\n      .bind(this.stateHelper, draftGroupingChange);\n    this.cancelGroupingChange = this.stateHelper.applyReducer\n      .bind(this.stateHelper, cancelGroupingChange);\n    this.setColumnSorting = this.setColumnSorting.bind(this);\n  }\n  getState() {\n    return {\n      ...this.state,\n      grouping: this.props.grouping || this.state.grouping,\n      expandedGroups: this.props.expandedGroups || this.state.expandedGroups,\n    };\n  }\n  setColumnSorting({ columnName, keepOther, ...restParams }, { sorting }, { setColumnSorting }) {\n    const { grouping } = this.getState();\n    const groupingIndex = grouping\n      .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n    if (groupingIndex === -1) {\n      setColumnSorting({\n        columnName,\n        keepOther: keepOther || grouping.map(columnGrouping => columnGrouping.columnName),\n        ...restParams,\n      });\n      return false;\n    }\n\n    const sortIndex = adjustSortIndex(groupingIndex, grouping, sorting);\n    setColumnSorting({\n      columnName,\n      keepOther: true,\n      sortIndex,\n      ...restParams,\n    });\n    return false;\n  }\n  groupByColumn({ columnName, groupIndex }, getters, actions) {\n    this.stateHelper.applyReducer(\n      groupByColumn,\n      { columnName, groupIndex },\n      (nextState, state) => {\n        const { grouping } = nextState;\n        const { grouping: prevGrouping } = state;\n        const { sorting } = getters;\n        const { setColumnSorting } = actions;\n\n        if (!sorting) return;\n\n        const columnSortingIndex = sorting\n          .findIndex(columnSorting => columnSorting.columnName === columnName);\n        const prevGroupingIndex = prevGrouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n        const groupingIndex = grouping\n          .findIndex(columnGrouping => columnGrouping.columnName === columnName);\n\n        if (columnSortingIndex === -1\n          || (prevGroupingIndex === prevGrouping.length - 1 && groupingIndex === -1)) return;\n\n        const sortIndex = adjustSortIndex(\n          groupingIndex === -1 ? grouping.length : groupingIndex,\n          grouping,\n          sorting,\n        );\n\n        if (columnSortingIndex === sortIndex) return;\n\n        setColumnSorting({\n          keepOther: true,\n          sortIndex,\n          ...sorting[columnSortingIndex],\n        });\n      },\n    );\n  }\n  notifyStateChange(nextState, state) {\n    const { grouping } = nextState;\n    const { onGroupingChange } = this.props;\n    if (onGroupingChange && grouping !== state.grouping) {\n      onGroupingChange(grouping);\n    }\n\n    const { expandedGroups } = nextState;\n    const { onExpandedGroupsChange } = this.props;\n    if (onExpandedGroupsChange && expandedGroups !== state.expandedGroups) {\n      onExpandedGroupsChange(expandedGroups);\n    }\n  }\n  render() {\n    const { grouping, groupingChange, expandedGroups } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"GroupingState\"\n        dependencies={dependencies}\n      >\n        <Getter name=\"grouping\" value={grouping} />\n        <Getter name=\"draftGrouping\" value={draftGrouping(grouping, groupingChange)} />\n        <Getter name=\"expandedGroups\" value={new Set(expandedGroups)} />\n\n        <Action name=\"groupByColumn\" action={this.groupByColumn} />\n        <Action name=\"toggleGroupExpanded\" action={this.toggleGroupExpanded} />\n        <Action name=\"draftGroupingChange\" action={this.draftGroupingChange} />\n        <Action name=\"cancelGroupingChange\" action={this.cancelGroupingChange} />\n\n        <Action name=\"setColumnSorting\" action={this.setColumnSorting} />\n      </PluginContainer>\n    );\n  }\n}\n\nGroupingState.propTypes = {\n  grouping: PropTypes.array,\n  defaultGrouping: PropTypes.array,\n  onGroupingChange: PropTypes.func,\n  expandedGroups: PropTypes.array,\n  defaultExpandedGroups: PropTypes.array,\n  onExpandedGroupsChange: PropTypes.func,\n};\n\nGroupingState.defaultProps = {\n  grouping: undefined,\n  defaultGrouping: [],\n  onGroupingChange: undefined,\n  expandedGroups: undefined,\n  defaultExpandedGroups: [],\n  onExpandedGroupsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  groupedRows,\n  expandedGroupRows,\n  getColumnExtension,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\n\nexport class IntegratedGrouping extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCriteria = columnName =>\n      getColumnExtension(columnExtensions, columnName).criteria;\n\n    const groupedRowsComputed = ({ rows, grouping, getCellValue }) =>\n      groupedRows(rows, grouping, getCellValue, getColumnCriteria);\n\n    return (\n      <PluginContainer\n        pluginName=\"IntegratedGrouping\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nIntegratedGrouping.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedGrouping.defaultProps = {\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  groupRowChecker,\n  groupRowLevelKeyGetter,\n  customGroupingRowIdGetter,\n  customGroupedRows,\n  expandedGroupRows,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'GroupingState' },\n];\n\nconst expandedGroupedRowsComputed = ({ rows, grouping, expandedGroups }) =>\n  expandedGroupRows(rows, grouping, expandedGroups);\nconst getRowIdComputed = ({ getRowId, rows }) =>\n  customGroupingRowIdGetter(getRowId, rows);\n\nexport class CustomGrouping extends React.PureComponent {\n  render() {\n    const {\n      getChildGroups,\n      grouping: appliedGrouping,\n      expandedGroups: appliedExpandedGroups,\n    } = this.props;\n    const groupedRowsComputed = ({ rows, grouping }) =>\n      customGroupedRows(rows, grouping, getChildGroups);\n\n    return (\n      <PluginContainer\n        pluginName=\"CustomGrouping\"\n        dependencies={pluginDependencies}\n      >\n        {appliedGrouping && (\n          <Getter name=\"grouping\" value={appliedGrouping} />\n        )}\n        {appliedExpandedGroups && (\n          <Getter name=\"expandedGroups\" value={new Set(appliedExpandedGroups)} />\n        )}\n        <Getter name=\"isGroupRow\" value={groupRowChecker} />\n        <Getter name=\"getRowLevelKey\" value={groupRowLevelKeyGetter} />\n        <Getter name=\"rows\" computed={groupedRowsComputed} />\n        <Getter name=\"getRowId\" computed={getRowIdComputed} />\n        <Getter name=\"rows\" computed={expandedGroupedRowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nCustomGrouping.propTypes = {\n  getChildGroups: PropTypes.func.isRequired,\n  grouping: PropTypes.array,\n  expandedGroups: PropTypes.array,\n};\n\nCustomGrouping.defaultProps = {\n  grouping: undefined,\n  expandedGroups: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setRowsSelection } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SelectionState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selection: props.defaultSelection || [],\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.toggleSelection = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'selection', setRowsSelection);\n  }\n  getState() {\n    return {\n      ...this.state,\n      selection: this.props.selection || this.state.selection,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { selection } = nextState;\n    const { onSelectionChange } = this.props;\n    if (onSelectionChange && selection !== state.selection) {\n      onSelectionChange(selection);\n    }\n  }\n  render() {\n    const { selection } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"SelectionState\"\n      >\n        <Getter name=\"selection\" value={new Set(selection)} />\n        <Action name=\"toggleSelection\" action={this.toggleSelection} />\n      </PluginContainer>\n    );\n  }\n}\n\nSelectionState.propTypes = {\n  selection: PropTypes.array,\n  defaultSelection: PropTypes.array,\n  onSelectionChange: PropTypes.func,\n};\n\nSelectionState.defaultProps = {\n  selection: undefined,\n  defaultSelection: undefined,\n  onSelectionChange: undefined,\n};\n","import React from 'react';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport {\n  getAvailableToSelect,\n  someSelected,\n  allSelected,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'SelectionState' },\n];\n\nexport class IntegratedSelection extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { availableToSelect: [] };\n\n    this.toggleSelectAll = this.toggleSelectAll.bind(this);\n    this.availableToSelect = this.availableToSelect.bind(this);\n  }\n\n  toggleSelectAll(select, { selection }, { toggleSelection }) {\n    const { availableToSelect } = this.state;\n    if (select === undefined) {\n      toggleSelection({ rowIds: availableToSelect });\n    } else if (select) {\n      toggleSelection({ rowIds: availableToSelect, selected: true });\n    } else {\n      toggleSelection({ rowIds: selection, selected: false });\n    }\n  }\n  availableToSelect({ rows, getRowId, isGroupRow }) {\n    this.setState({ availableToSelect: getAvailableToSelect(rows, getRowId, isGroupRow) });\n    return rows;\n  }\n  render() {\n    const { availableToSelect } = this.state;\n\n    const allSelectedComputed = ({ selection }) =>\n      allSelected({ selection, availableToSelect });\n    const someSelectedComputed = ({ selection }) =>\n      someSelected({ selection, availableToSelect });\n\n    return (\n      <PluginContainer\n        pluginName=\"IntegratedSelection\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={this.availableToSelect} />\n        <Getter name=\"allSelected\" computed={allSelectedComputed} />\n        <Getter name=\"someSelected\" computed={someSelectedComputed} />\n        <Getter name=\"selectAllAvailable\" value={!!availableToSelect.length} />\n\n        <Action name=\"toggleSelectAll\" action={this.toggleSelectAll} />\n      </PluginContainer>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setColumnSorting } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class SortingState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sorting: props.defaultSorting,\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.setColumnSorting = stateHelper.applyReducer\n      .bind(stateHelper, setColumnSorting);\n  }\n  getState() {\n    return {\n      ...this.state,\n      sorting: this.props.sorting || this.state.sorting,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { sorting } = nextState;\n    const { onSortingChange } = this.props;\n    if (onSortingChange && sorting !== state.sorting) {\n      onSortingChange(sorting);\n    }\n  }\n  render() {\n    const { sorting } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"SortingState\"\n      >\n        <Getter name=\"sorting\" value={sorting} />\n        <Action name=\"setColumnSorting\" action={this.setColumnSorting} />\n      </PluginContainer>\n    );\n  }\n}\n\nSortingState.propTypes = {\n  sorting: PropTypes.array,\n  defaultSorting: PropTypes.array,\n  onSortingChange: PropTypes.func,\n};\n\nSortingState.defaultProps = {\n  sorting: undefined,\n  defaultSorting: [],\n  onSortingChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, PluginContainer } from '@devexpress/dx-react-core';\nimport { sortedRows, getColumnExtension } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'SortingState' },\n];\n\nexport class IntegratedSorting extends React.PureComponent {\n  render() {\n    const { columnExtensions } = this.props;\n    const getColumnCompare = columnName =>\n      getColumnExtension(columnExtensions, columnName).compare;\n\n    const rowsComputed = ({\n      rows, sorting, getCellValue, isGroupRow, getRowLevelKey,\n    }) =>\n      sortedRows(rows, sorting, getCellValue, getColumnCompare, isGroupRow, getRowLevelKey);\n\n    return (\n      <PluginContainer\n        pluginName=\"IntegratedSorting\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"rows\" computed={rowsComputed} />\n      </PluginContainer>\n    );\n  }\n}\n\nIntegratedSorting.propTypes = {\n  columnExtensions: PropTypes.array,\n};\n\nIntegratedSorting.defaultProps = {\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PluginContainer, Getter, Template, TemplatePlaceholder,\n  TemplateConnector,\n  DragDropProvider as DragDropProviderCore,\n} from '@devexpress/dx-react-core';\n\nconst getTargetColumns = (payload, columns) => payload\n  .filter(item => item.type === 'column')\n  .map(item => columns.find(column => column.name === item.columnName));\n\nexport class DragDropProvider extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      payload: null,\n      clientOffset: null,\n    };\n\n    this.change = ({ payload, clientOffset }) => this.setState({ payload, clientOffset });\n  }\n  render() {\n    const {\n      containerComponent: Container,\n      columnComponent: Column,\n    } = this.props;\n    const {\n      payload,\n      clientOffset,\n    } = this.state;\n\n    return (\n      <PluginContainer\n        pluginName=\"DragDropProvider\"\n      >\n        <Getter name=\"draggingEnabled\" value />\n        <Template name=\"root\">\n          <DragDropProviderCore\n            onChange={this.change}\n          >\n            <TemplatePlaceholder />\n          </DragDropProviderCore>\n          {payload && (\n            <TemplateConnector>\n              {({ columns }) => (\n                <Container\n                  clientOffset={clientOffset}\n                >\n                  {getTargetColumns(payload, columns)\n                    .map(column => (\n                      <Column\n                        key={column.name}\n                        column={column}\n                      />\n                    ))\n                  }\n                </Container>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nDragDropProvider.propTypes = {\n  containerComponent: PropTypes.func.isRequired,\n  columnComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  PluginContainer,\n  Template,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport {\n  TABLE_DATA_TYPE,\n  TABLE_REORDERING_TYPE,\n  orderedColumns,\n  changeColumnOrder,\n  getTableTargetColumnIndex,\n  tableHeaderRowsWithReordering,\n  draftOrder as draftOrderComputed,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'Table' },\n];\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n  tableHeaderRowsWithReordering(tableHeaderRows);\n\nexport class TableColumnReordering extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      order: props.defaultOrder || props.order,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    };\n\n    this.onOver = this.handleOver.bind(this);\n    this.onLeave = this.handleLeave.bind(this);\n    this.onDrop = this.handleDrop.bind(this);\n  }\n  getState() {\n    const { state } = this;\n    const { order = state.order } = this.props;\n    return { ...state, order };\n  }\n  getDraftOrder() {\n    const { order, sourceColumnIndex, targetColumnIndex } = this.getState();\n    return draftOrderComputed(order, sourceColumnIndex, targetColumnIndex);\n  }\n  getAvailableColumns() {\n    return this.getDraftOrder()\n      .filter(columnName => !!this.cellDimensionGetters[columnName]);\n  }\n  cacheCellDimensions() {\n    this.cellDimensions = (this.cellDimensions && this.cellDimensions.length)\n      ? this.cellDimensions\n      : this.getAvailableColumns()\n        .map(columnName => this.cellDimensionGetters[columnName]());\n  }\n  resetCellDimensions() {\n    this.cellDimensions = [];\n  }\n  storeCellDimensionsGetter(tableColumn, data) {\n    if (tableColumn.type === TABLE_DATA_TYPE) {\n      this.cellDimensionGetters[tableColumn.column.name] = data;\n    }\n  }\n  handleOver({ payload, clientOffset: { x } }) {\n    const sourceColumnName = payload[0].columnName;\n    const availableColumns = this.getAvailableColumns();\n    const relativeSourceColumnIndex = availableColumns.indexOf(sourceColumnName);\n\n    if (relativeSourceColumnIndex === -1) return;\n\n    this.cacheCellDimensions();\n    const { cellDimensions } = this;\n\n    const overlappedColumns = cellDimensions\n      .filter(({ left, right }) => left <= x && x <= right);\n\n    if (overlappedColumns.length > 1) return;\n\n    const relativeTargetIndex = getTableTargetColumnIndex(\n      cellDimensions,\n      relativeSourceColumnIndex,\n      x,\n    );\n\n    if (relativeTargetIndex === -1) return;\n\n    const {\n      sourceColumnIndex: prevSourceColumnIndex,\n      targetColumnIndex: prevTargetColumnIndex,\n    } = this.getState();\n    const draftOrder = this.getDraftOrder();\n    const targetColumnIndex = draftOrder.indexOf(availableColumns[relativeTargetIndex]);\n\n    if (targetColumnIndex === prevTargetColumnIndex) return;\n\n    const sourceColumnIndex = prevSourceColumnIndex === -1\n      ? draftOrder.indexOf(sourceColumnName)\n      : prevSourceColumnIndex;\n\n    this.setState({\n      sourceColumnIndex,\n      targetColumnIndex,\n    });\n  }\n  handleLeave() {\n    this.setState({\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    this.resetCellDimensions();\n  }\n  handleDrop() {\n    const { sourceColumnIndex, targetColumnIndex, order } = this.getState();\n    const { onOrderChange } = this.props;\n    const nextOrder = changeColumnOrder(order, {\n      sourceColumnName: order[sourceColumnIndex],\n      targetColumnName: order[targetColumnIndex],\n    });\n\n    this.setState({\n      order: nextOrder,\n      sourceColumnIndex: -1,\n      targetColumnIndex: -1,\n    });\n\n    if (onOrderChange) {\n      onOrderChange(nextOrder);\n    }\n\n    this.resetCellDimensions();\n  }\n  render() {\n    const {\n      tableContainerComponent: Container,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    const columnsComputed = ({ tableColumns }) =>\n      orderedColumns(tableColumns, this.getDraftOrder());\n\n    this.cellDimensionGetters = {};\n\n    return (\n      <PluginContainer\n        pluginName=\"TableColumnReordering\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={columnsComputed} />\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template name=\"table\">\n          {params => (\n            <Container\n              {...params}\n              onOver={this.onOver}\n              onLeave={this.onLeave}\n              onDrop={this.onDrop}\n            >\n              <TemplatePlaceholder />\n            </Container>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Row {...params} />\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => tableRow.type === TABLE_REORDERING_TYPE}\n        >\n          {params => (\n            <Cell\n              {...params}\n              getCellDimensions={fn =>\n                this.storeCellDimensionsGetter(params.tableColumn, fn)}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableColumnReordering.propTypes = {\n  order: PropTypes.arrayOf(PropTypes.string),\n  defaultOrder: PropTypes.arrayOf(PropTypes.string),\n  onOrderChange: PropTypes.func,\n  tableContainerComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nTableColumnReordering.defaultProps = {\n  order: undefined,\n  defaultOrder: undefined,\n  onOrderChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter,\n  Template,\n  TemplatePlaceholder,\n  TemplateConnector,\n  PluginContainer,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithDataRows,\n  tableRowsWithDataRows,\n  isNoDataTableRow,\n  isDataTableCell,\n  isHeaderStubTableCell,\n  isDataTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst RowPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableRow\" params={props} />;\nconst CellPlaceholder = props =>\n  <TemplatePlaceholder name=\"tableCell\" params={props} />;\n\nconst tableHeaderRows = [];\nconst tableBodyRowsComputed = ({ rows, getRowId }) =>\n  tableRowsWithDataRows(rows, getRowId);\n\nconst pluginDependencies = [\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nexport class Table extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      cellComponent: Cell,\n      rowComponent: Row,\n      noDataRowComponent: NoDataRow,\n      noDataCellComponent: NoDataCell,\n      stubCellComponent: StubCell,\n      stubHeaderCellComponent: StubHeaderCell,\n      columnExtensions,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ columns }) =>\n      tableColumnsWithDataRows(columns, columnExtensions);\n\n    return (\n      <PluginContainer\n        pluginName=\"Table\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" value={tableHeaderRows} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template name=\"body\">\n          <TemplatePlaceholder name=\"table\" />\n        </Template>\n        <Template name=\"table\">\n          <TemplateConnector>\n            {({ tableHeaderRows: headerRows, tableBodyRows: bodyRows, tableColumns: columns }) => (\n              <Layout\n                headerRows={headerRows}\n                bodyRows={bodyRows}\n                columns={columns}\n                rowComponent={RowPlaceholder}\n                cellComponent={CellPlaceholder}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n        <Template name=\"tableCell\">\n          {params => (\n            <TemplateConnector>\n              {({ tableHeaderRows: headerRows }) =>\n                (isHeaderStubTableCell(params.tableRow, headerRows)\n                  ? <StubHeaderCell {...params} />\n                  : <StubCell {...params} />\n                )\n              }\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDataTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue }) => {\n                const columnName = params.tableColumn.column.name;\n                const value = getCellValue(params.tableRow.row, columnName);\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueFormatter\"\n                    params={{\n                      row: params.tableRow.row,\n                      column: params.tableColumn.column,\n                      value,\n                    }}\n                  >\n                    {content => (\n                      <Cell\n                        {...params}\n                        row={params.tableRow.row}\n                        column={params.tableColumn.column}\n                        value={value}\n                      >\n                        {content}\n                      </Cell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataCell {...{ getMessage, ...params }} />}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDataTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isNoDataTableRow(tableRow)}\n        >\n          {params => <NoDataRow {...params} />}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTable.propTypes = {\n  layoutComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  noDataCellComponent: PropTypes.func.isRequired,\n  noDataRowComponent: PropTypes.func.isRequired,\n  stubCellComponent: PropTypes.func.isRequired,\n  stubHeaderCellComponent: PropTypes.func.isRequired,\n  columnExtensions: PropTypes.array,\n  messages: PropTypes.object,\n};\n\nTable.defaultProps = {\n  columnExtensions: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithSelection,\n  isSelectTableCell,\n  isSelectAllTableCell,\n  isDataTableRow,\n} from '@devexpress/dx-grid-core';\n\nexport class TableSelection extends React.PureComponent {\n  render() {\n    const {\n      highlightRow,\n      selectByRowClick,\n      showSelectionColumn,\n      showSelectAll,\n      headerCellComponent: HeaderCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      selectionColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithSelection(tableColumns, selectionColumnWidth);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableSelection\"\n        dependencies={[\n          { pluginName: 'Table' },\n          { pluginName: 'SelectionState' },\n          { pluginName: 'IntegratedSelection', optional: !showSelectAll },\n        ]}\n      >\n        {showSelectionColumn && (\n          <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        )}\n\n        {(showSelectionColumn && showSelectAll) && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectAllTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selectAllAvailable, allSelected, someSelected }, { toggleSelectAll }) => (\n                  <HeaderCell\n                    {...params}\n                    disabled={!selectAllAvailable}\n                    allSelected={allSelected}\n                    someSelected={someSelected}\n                    onToggle={select => toggleSelectAll(select)}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {showSelectionColumn && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isSelectTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                    selected={selection.has(params.tableRow.rowId)}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n        {(highlightRow || selectByRowClick) && (\n          <Template\n            name=\"tableRow\"\n            predicate={({ tableRow }) => isDataTableRow(tableRow)}\n          >\n            {params => (\n              <TemplateConnector>\n                {({ selection }, { toggleSelection }) => (\n                  <Row\n                    {...params}\n                    selectByRowClick\n                    selected={highlightRow && selection.has(params.tableRow.rowId)}\n                    onToggle={() => toggleSelection({ rowIds: [params.tableRow.rowId] })}\n                  />\n                )}\n              </TemplateConnector>\n            )}\n          </Template>\n        )}\n      </PluginContainer>\n    );\n  }\n}\n\nTableSelection.propTypes = {\n  headerCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  highlightRow: PropTypes.bool,\n  selectByRowClick: PropTypes.bool,\n  showSelectAll: PropTypes.bool,\n  showSelectionColumn: PropTypes.bool,\n  selectionColumnWidth: PropTypes.number.isRequired,\n};\n\nTableSelection.defaultProps = {\n  highlightRow: false,\n  selectByRowClick: false,\n  showSelectAll: false,\n  showSelectionColumn: true,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Getter, Action, PluginContainer } from '@devexpress/dx-react-core';\nimport { setDetailRowExpanded } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nexport class RowDetailState extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedRows: props.defaultExpandedRows || [],\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.setDetailRowExpanded = stateHelper.applyFieldReducer\n      .bind(stateHelper, 'expandedRows', setDetailRowExpanded);\n  }\n  getState() {\n    return {\n      ...this.state,\n      expandedRows: this.props.expandedRows || this.state.expandedRows,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { expandedRows } = nextState;\n    const { onExpandedRowsChange } = this.props;\n    if (onExpandedRowsChange && expandedRows !== state.expandedRows) {\n      onExpandedRowsChange(expandedRows);\n    }\n  }\n  render() {\n    const { expandedRows } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"RowDetailState\"\n      >\n        <Getter name=\"expandedRows\" value={expandedRows} />\n        <Action name=\"setDetailRowExpanded\" action={this.setDetailRowExpanded} />\n      </PluginContainer>\n    );\n  }\n}\n\nRowDetailState.propTypes = {\n  expandedRows: PropTypes.array,\n  defaultExpandedRows: PropTypes.array,\n  onExpandedRowsChange: PropTypes.func,\n};\n\nRowDetailState.defaultProps = {\n  expandedRows: undefined,\n  defaultExpandedRows: undefined,\n  onExpandedRowsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableRowsWithExpandedDetail,\n  isDetailRowExpanded,\n  tableColumnsWithDetail,\n  isDetailToggleTableCell,\n  isDetailTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'Table' },\n];\n\nexport class TableRowDetail extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      contentComponent: Content,\n      toggleCellComponent: ToggleCell,\n      cellComponent: Cell,\n      rowComponent: Row,\n      toggleColumnWidth,\n    } = this.props;\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithDetail(tableColumns, toggleColumnWidth);\n    const tableBodyRowsComputed = ({ tableBodyRows, expandedRows }) =>\n      tableRowsWithExpandedDetail(tableBodyRows, expandedRows, rowHeight);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableRowDetail\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isDetailToggleTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedRows }, { setDetailRowExpanded }) => (\n                <ToggleCell\n                  {...params}\n                  row={params.tableRow.row}\n                  expanded={isDetailRowExpanded(expandedRows, params.tableRow.rowId)}\n                  onToggle={() => setDetailRowExpanded({ rowId: params.tableRow.rowId })}\n                />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Cell\n              {...params}\n              row={params.tableRow.row}\n            >\n              <Content row={params.tableRow.row} />\n            </Cell>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isDetailTableRow(tableRow)}\n        >\n          {params => (\n            <Row\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableRowDetail.propTypes = {\n  contentComponent: PropTypes.func,\n  toggleCellComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  toggleColumnWidth: PropTypes.number.isRequired,\n  rowHeight: PropTypes.number,\n};\n\nTableRowDetail.defaultProps = {\n  contentComponent: () => null,\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer, TemplatePlaceholder, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithGrouping,\n  tableRowsWithGrouping,\n  isGroupTableCell,\n  isGroupIndentTableCell,\n  isGroupTableRow,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'GroupingState' },\n  { pluginName: 'Table' },\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nconst tableBodyRowsComputed = ({ tableBodyRows, isGroupRow }) =>\n  tableRowsWithGrouping(tableBodyRows, isGroupRow);\n\nconst showColumnWhenGroupedGetter = (showColumnsWhenGrouped, columnExtensions = []) => {\n  const map = columnExtensions.reduce((acc, columnExtension) => {\n    acc[columnExtension.columnName] = columnExtension.showWhenGrouped;\n    return acc;\n  }, {});\n\n  return columnName => map[columnName] || showColumnsWhenGrouped;\n};\n\nexport class TableGroupRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: GroupCell,\n      rowComponent: GroupRow,\n      indentCellComponent: GroupIndentCell,\n      indentColumnWidth,\n      showColumnsWhenGrouped,\n      columnExtensions,\n    } = this.props;\n\n    const tableColumnsComputed = ({\n      columns, tableColumns, grouping, draftGrouping,\n    }) =>\n      tableColumnsWithGrouping(\n        columns,\n        tableColumns,\n        grouping,\n        draftGrouping,\n        indentColumnWidth,\n        showColumnWhenGroupedGetter(showColumnsWhenGrouped, columnExtensions),\n      );\n\n    return (\n      <PluginContainer\n        pluginName=\"TableGroupRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isGroupTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ expandedGroups }, { toggleGroupExpanded }) => (\n                <TemplatePlaceholder\n                  name=\"valueFormatter\"\n                  params={{\n                    column: params.tableColumn.column,\n                    value: params.tableRow.row.value,\n                  }}\n                >\n                  {content => (\n                    <GroupCell\n                      {...params}\n                      row={params.tableRow.row}\n                      column={params.tableColumn.column}\n                      expanded={expandedGroups.has(params.tableRow.row.compoundKey)}\n                      onToggle={() =>\n                        toggleGroupExpanded({ groupKey: params.tableRow.row.compoundKey })}\n                    >\n                      {content}\n                    </GroupCell>\n                  )}\n                </TemplatePlaceholder>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        {GroupIndentCell && (\n          <Template\n            name=\"tableCell\"\n            predicate={({ tableRow, tableColumn }) => isGroupIndentTableCell(tableRow, tableColumn)}\n          >\n            {params => (\n              <GroupIndentCell\n                {...params}\n                row={params.tableRow.row}\n                column={params.tableColumn.column}\n              />\n            )}\n          </Template>\n        )}\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isGroupTableRow(tableRow)}\n        >\n          {params => (\n            <GroupRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableGroupRow.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  indentCellComponent: PropTypes.func,\n  indentColumnWidth: PropTypes.number.isRequired,\n  showColumnsWhenGrouped: PropTypes.bool,\n  columnExtensions: PropTypes.array,\n};\n\nTableGroupRow.defaultProps = {\n  indentCellComponent: null,\n  showColumnsWhenGrouped: false,\n  columnExtensions: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnSortingDirection,\n  tableRowsWithHeading,\n  isHeadingTableCell,\n  isHeadingTableRow,\n  getMessagesFormatter,\n  TABLE_DATA_TYPE,\n} from '@devexpress/dx-grid-core';\n\nconst tableHeaderRowsComputed = ({ tableHeaderRows }) => tableRowsWithHeading(tableHeaderRows);\n\nexport class TableHeaderRow extends React.PureComponent {\n  render() {\n    const {\n      showSortingControls,\n      showGroupingControls,\n      cellComponent: HeaderCell,\n      rowComponent: HeaderRow,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableHeaderRow\"\n        dependencies={[\n          { pluginName: 'Table' },\n          { pluginName: 'SortingState', optional: !showSortingControls },\n          { pluginName: 'GroupingState', optional: !showGroupingControls },\n          { pluginName: 'DragDropProvider', optional: true },\n          { pluginName: 'TableColumnResizing', optional: true },\n        ]}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isHeadingTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({\n                sorting, tableColumns, draggingEnabled, tableColumnResizingEnabled,\n              }, {\n                setColumnSorting, groupByColumn,\n                changeTableColumnWidths, changeDraftTableColumnWidths,\n              }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const atLeastOneDataColumn = tableColumns\n                  .filter(({ type }) => type === TABLE_DATA_TYPE).length > 1;\n\n                return (\n                  <HeaderCell\n                    {...params}\n                    column={params.tableColumn.column}\n                    getMessage={getMessage}\n                    showSortingControls={showSortingControls && sorting !== undefined}\n                    showGroupingControls={showGroupingControls && atLeastOneDataColumn}\n                    draggingEnabled={draggingEnabled && atLeastOneDataColumn}\n                    resizingEnabled={tableColumnResizingEnabled}\n                    sortingDirection={showSortingControls && sorting !== undefined\n                      ? getColumnSortingDirection(sorting, columnName) : undefined}\n                    onSort={({ direction, keepOther }) =>\n                      setColumnSorting({ columnName, direction, keepOther })}\n                    onGroup={() =>\n                      groupByColumn({ columnName })}\n                    onWidthChange={({ shift }) =>\n                      changeTableColumnWidths({ shifts: { [columnName]: shift } })}\n                    onDraftWidthChange={({ shift }) =>\n                      changeDraftTableColumnWidths({ shifts: { [columnName]: shift } })}\n                  />\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isHeadingTableRow(tableRow)}\n        >\n          {params => <HeaderRow {...params} />}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableHeaderRow.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nTableHeaderRow.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, PluginContainer,\n} from '@devexpress/dx-react-core';\nimport {\n  getColumnFilterConfig,\n  tableHeaderRowsWithFilter,\n  isFilterTableCell,\n  isFilterTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'FilteringState' },\n  { pluginName: 'Table' },\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nexport class TableFilterRow extends React.PureComponent {\n  render() {\n    const {\n      rowHeight,\n      cellComponent: FilterCell,\n      rowComponent: FilterRow,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const tableHeaderRowsComputed = ({ tableHeaderRows }) =>\n      tableHeaderRowsWithFilter(tableHeaderRows, rowHeight);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableFilterRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableHeaderRows\" computed={tableHeaderRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isFilterTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ filters }, { setColumnFilter }) => {\n                const { name: columnName } = params.tableColumn.column;\n                const filter = getColumnFilterConfig(filters, columnName);\n                const onFilter = config => setColumnFilter({ columnName, config });\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      value: filter ? filter.value : null,\n                      onValueChange: newValue => onFilter(newValue ? { value: newValue } : null),\n                    }}\n                  >\n                    {content => (\n                      <FilterCell\n                        {...params}\n                        getMessage={getMessage}\n                        column={params.tableColumn.column}\n                        filter={filter}\n                        onFilter={onFilter}\n                      >\n                        {content}\n                      </FilterCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => isFilterTableRow(tableRow)}\n        >\n          {params => <FilterRow {...params} />}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableFilterRow.propTypes = {\n  rowHeight: PropTypes.any,\n  messages: PropTypes.object,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableFilterRow.defaultProps = {\n  rowHeight: undefined,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, TemplatePlaceholder, TemplateConnector, PluginContainer,\n} from '@devexpress/dx-react-core';\nimport {\n  getRowChange,\n  tableRowsWithEditing,\n  isEditTableRow,\n  isAddedTableRow,\n  isEditTableCell,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'EditingState' },\n  { pluginName: 'Table' },\n  { pluginName: 'DataTypeProvider', optional: true },\n];\n\nexport class TableEditRow extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: EditCell,\n      rowComponent: EditRow,\n      rowHeight,\n    } = this.props;\n\n    const tableBodyRowsComputed = ({ tableBodyRows, editingRows, addedRows }) =>\n      tableRowsWithEditing(tableBodyRows, editingRows, addedRows, rowHeight);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableEditRow\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableBodyRows\" computed={tableBodyRowsComputed} />\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) => isEditTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {({ getCellValue, createRowChange, changedRows }, { changeAddedRow, changeRow }) => {\n                const { rowId, row } = params.tableRow;\n                const { name: columnName } = params.tableColumn.column;\n\n                const isNew = isAddedTableRow(params.tableRow);\n                const changedRow = isNew\n                  ? row\n                  : { ...row, ...getRowChange(changedRows, rowId) };\n\n                const value = getCellValue(changedRow, columnName);\n                const onValueChange = (newValue) => {\n                  const changeArgs = {\n                    rowId,\n                    change: createRowChange(changedRow, newValue, columnName),\n                  };\n                  if (isNew) {\n                    changeAddedRow(changeArgs);\n                  } else {\n                    changeRow(changeArgs);\n                  }\n                };\n                return (\n                  <TemplatePlaceholder\n                    name=\"valueEditor\"\n                    params={{\n                      column: params.tableColumn.column,\n                      row,\n                      value,\n                      onValueChange,\n                    }}\n                  >\n                    {content => (\n                      <EditCell\n                        {...params}\n                        row={row}\n                        column={params.tableColumn.column}\n                        value={value}\n                        onValueChange={onValueChange}\n                      >\n                        {content}\n                      </EditCell>\n                    )}\n                  </TemplatePlaceholder>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableRow\"\n          predicate={({ tableRow }) => (isEditTableRow(tableRow) || isAddedTableRow(tableRow))}\n        >\n          {params => (\n            <EditRow\n              {...params}\n              row={params.tableRow.row}\n            />\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableEditRow.propTypes = {\n  rowHeight: PropTypes.any,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n};\n\nTableEditRow.defaultProps = {\n  rowHeight: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Getter, Template, PluginContainer, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithEditing,\n  isHeadingEditCommandsTableCell,\n  isEditCommandsTableCell,\n  isAddedTableRow,\n  isEditTableRow,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'EditingState' },\n  { pluginName: 'Table' },\n];\n\nexport class TableEditColumn extends React.PureComponent {\n  render() {\n    const {\n      cellComponent: Cell,\n      headerCellComponent: HeaderCell,\n      commandComponent: Command,\n      showAddCommand,\n      showEditCommand,\n      showDeleteCommand,\n      width,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const tableColumnsComputed = ({ tableColumns }) => tableColumnsWithEditing(tableColumns, width);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableEditColumn\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isHeadingEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => (\n                <HeaderCell {...params}>\n                  {showAddCommand && (\n                    <Command\n                      id=\"add\"\n                      text={getMessage('addCommand')}\n                      onExecute={() => actions.addRow()}\n                    />\n                  )}\n                </HeaderCell>\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n        <Template\n          name=\"tableCell\"\n          predicate={({ tableRow, tableColumn }) =>\n            isEditCommandsTableCell(tableRow, tableColumn)}\n        >\n          {params => (\n            <TemplateConnector>\n              {(getters, actions) => {\n                const isEdit = isEditTableRow(params.tableRow);\n                const isNew = isAddedTableRow(params.tableRow);\n                const isEditing = isEdit || isNew;\n                const rowIds = [params.tableRow.rowId];\n                return (\n                  <Cell\n                    {...params}\n                    row={params.tableRow.row}\n                  >\n                    {showEditCommand && !isEditing && (\n                      <Command\n                        id=\"edit\"\n                        text={getMessage('editCommand')}\n                        onExecute={() => actions.startEditRows({ rowIds })}\n                      />\n                    )}\n                    {showDeleteCommand && !isEditing && (\n                      <Command\n                        id=\"delete\"\n                        text={getMessage('deleteCommand')}\n                        onExecute={() => {\n                          actions.deleteRows({ rowIds });\n                          actions.commitDeletedRows({ rowIds });\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"commit\"\n                        text={getMessage('commitCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.commitAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.commitChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                    {isEditing && (\n                      <Command\n                        id=\"cancel\"\n                        text={getMessage('cancelCommand')}\n                        onExecute={() => {\n                          if (isNew) {\n                            actions.cancelAddedRows({ rowIds });\n                          } else {\n                            actions.stopEditRows({ rowIds });\n                            actions.cancelChangedRows({ rowIds });\n                          }\n                        }}\n                      />\n                    )}\n                  </Cell>\n                );\n              }}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\nTableEditColumn.propTypes = {\n  cellComponent: PropTypes.func.isRequired,\n  headerCellComponent: PropTypes.func.isRequired,\n  commandComponent: PropTypes.func.isRequired,\n  showAddCommand: PropTypes.bool,\n  showEditCommand: PropTypes.bool,\n  showDeleteCommand: PropTypes.bool,\n  width: PropTypes.number,\n  messages: PropTypes.object,\n};\nTableEditColumn.defaultProps = {\n  showAddCommand: false,\n  showEditCommand: false,\n  showDeleteCommand: false,\n  width: 140,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginContainer, Getter, Action } from '@devexpress/dx-react-core';\nimport {\n  tableColumnsWithWidths,\n  changeTableColumnWidths,\n  changeDraftTableColumnWidths,\n} from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { pluginName: 'Table' },\n];\n\nexport class TableColumnResizing extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columnWidths: props.defaultColumnWidths,\n      draftColumnWidths: {},\n    };\n\n    const stateHelper = createStateHelper(this);\n\n    this.changeTableColumnWidthsAction =\n      stateHelper.applyReducer.bind(stateHelper, changeTableColumnWidths);\n\n    this.changeDraftTableColumnWidthsAction =\n      stateHelper.applyReducer.bind(stateHelper, changeDraftTableColumnWidths);\n  }\n  getState() {\n    return {\n      ...this.state,\n      columnWidths: this.props.columnWidths || this.state.columnWidths,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { columnWidths } = nextState;\n    const { onColumnWidthsChange } = this.props;\n    if (onColumnWidthsChange && columnWidths !== state.columnWidths) {\n      onColumnWidthsChange(columnWidths);\n    }\n  }\n  render() {\n    const { columnWidths, draftColumnWidths } = this.getState();\n\n    const tableColumnsComputed = ({ tableColumns }) =>\n      tableColumnsWithWidths(tableColumns, columnWidths, draftColumnWidths);\n\n    return (\n      <PluginContainer\n        pluginName=\"TableColumnResizing\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"tableColumnResizingEnabled\" value />\n        <Getter name=\"tableColumns\" computed={tableColumnsComputed} />\n        <Action name=\"changeTableColumnWidths\" action={this.changeTableColumnWidthsAction} />\n        <Action\n          name=\"changeDraftTableColumnWidths\"\n          action={this.changeDraftTableColumnWidthsAction}\n        />\n      </PluginContainer>\n    );\n  }\n}\n\nTableColumnResizing.propTypes = {\n  defaultColumnWidths: PropTypes.objectOf(PropTypes.number),\n  columnWidths: PropTypes.objectOf(PropTypes.number),\n  onColumnWidthsChange: PropTypes.func,\n};\n\nTableColumnResizing.defaultProps = {\n  defaultColumnWidths: {},\n  columnWidths: undefined,\n  onColumnWidthsChange: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, PluginContainer,\n  TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport { pageCount, getMessagesFormatter } from '@devexpress/dx-grid-core';\n\nconst pluginDependencies = [\n  { pluginName: 'PagingState' },\n];\n\nexport class PagingPanel extends React.PureComponent {\n  render() {\n    const {\n      containerComponent: Pager,\n      pageSizes,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n\n    return (\n      <PluginContainer\n        pluginName=\"PagingPanel\"\n        dependencies={pluginDependencies}\n      >\n        <Template name=\"footer\">\n          <TemplatePlaceholder />\n          <TemplateConnector>\n            {({ currentPage, pageSize, totalCount }, { setCurrentPage, setPageSize }) => (\n              <Pager\n                currentPage={currentPage}\n                pageSize={pageSize}\n                totalCount={totalCount}\n                totalPages={pageCount(totalCount, pageSize)}\n                pageSizes={pageSizes}\n                getMessage={getMessage}\n                onCurrentPageChange={setCurrentPage}\n                onPageSizeChange={setPageSize}\n              />\n            )}\n          </TemplateConnector>\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nPagingPanel.propTypes = {\n  pageSizes: PropTypes.arrayOf(PropTypes.number),\n  containerComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nPagingPanel.defaultProps = {\n  pageSizes: [],\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Template, TemplatePlaceholder, PluginContainer, TemplateConnector,\n} from '@devexpress/dx-react-core';\nimport {\n  groupingPanelItems,\n  getColumnSortingDirection,\n  getMessagesFormatter,\n} from '@devexpress/dx-grid-core';\n\nexport class GroupingPanel extends React.PureComponent {\n  render() {\n    const {\n      layoutComponent: Layout,\n      containerComponent: Container,\n      itemComponent: Item,\n      emptyMessageComponent: EmptyMessage,\n      showSortingControls,\n      showGroupingControls,\n      messages,\n    } = this.props;\n\n    const getMessage = getMessagesFormatter(messages);\n\n    const EmptyMessagePlaceholder = () => (\n      <EmptyMessage\n        getMessage={getMessage}\n      />\n    );\n\n    const ItemPlaceholder = ({ item }) => {\n      const { name: columnName } = item.column;\n      return (\n        <TemplateConnector>\n          {({ sorting }, { groupByColumn, setColumnSorting }) => (\n            <Item\n              item={item}\n              showSortingControls={showSortingControls && sorting !== undefined}\n              sortingDirection={sorting !== undefined\n                ? getColumnSortingDirection(sorting, columnName) : undefined}\n              showGroupingControls={showGroupingControls}\n              onGroup={() => groupByColumn({ columnName })}\n              onSort={({ direction, keepOther }) =>\n                setColumnSorting({ columnName, direction, keepOther })}\n            />\n          )}\n        </TemplateConnector>\n      );\n    };\n\n    return (\n      <PluginContainer\n        pluginName=\"GroupingPanel\"\n        dependencies={[\n          { pluginName: 'GroupingState' },\n          { pluginName: 'Toolbar' },\n          { pluginName: 'SortingState', optional: !showSortingControls },\n        ]}\n      >\n        <Template name=\"toolbarContent\">\n          <TemplateConnector>\n            {({\n              columns, draftGrouping, draggingEnabled,\n            }, {\n              groupByColumn, draftGroupingChange, cancelGroupingChange,\n            }) => (\n              <Layout\n                items={groupingPanelItems(columns, draftGrouping)}\n                draggingEnabled={draggingEnabled}\n                onGroup={groupByColumn}\n                onDraftGroup={groupingChange => draftGroupingChange(groupingChange)}\n                onCancelDraftGroup={() => cancelGroupingChange()}\n                itemComponent={ItemPlaceholder}\n                emptyMessageComponent={EmptyMessagePlaceholder}\n                containerComponent={Container}\n              />\n            )}\n          </TemplateConnector>\n          <TemplatePlaceholder />\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nGroupingPanel.propTypes = {\n  showSortingControls: PropTypes.bool,\n  showGroupingControls: PropTypes.bool,\n  layoutComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  messages: PropTypes.object,\n};\n\nGroupingPanel.defaultProps = {\n  showSortingControls: false,\n  showGroupingControls: false,\n  messages: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PluginContainer, Template } from '@devexpress/dx-react-core';\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport class DataTypeProvider extends React.PureComponent {\n  render() {\n    const {\n      for: columnNames,\n      formatterComponent: Formatter,\n      editorComponent: Editor,\n    } = this.props;\n    return (\n      <PluginContainer name=\"DataTypeProvider\">\n        {Formatter\n          ? (\n            <Template\n              name=\"valueFormatter\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Formatter {...params} />}\n            </Template>\n          )\n          : null\n        }\n        {Editor\n          ? (\n            <Template\n              name=\"valueEditor\"\n              predicate={({ column }) => columnNames.includes(column.name)}\n            >\n              {params => <Editor {...params} />}\n            </Template>\n          )\n          : null\n        }\n      </PluginContainer>\n    );\n  }\n}\n\nDataTypeProvider.propTypes = {\n  for: PropTypes.arrayOf(PropTypes.string).isRequired,\n  formatterComponent: PropTypes.func,\n  editorComponent: PropTypes.func,\n};\n\nDataTypeProvider.defaultProps = {\n  formatterComponent: undefined,\n  editorComponent: undefined,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Action,\n  Getter,\n  PluginContainer,\n  Template,\n  TemplateConnector,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\nimport { getMessagesFormatter, toggleColumn, visibleTableColumns } from '@devexpress/dx-grid-core';\nimport { createStateHelper } from '../utils/state-helper';\n\nconst pluginDependencies = [\n  { pluginName: 'Table' },\n];\n\nconst visibleTableColumnsComputed = ({ tableColumns, hiddenColumns }) =>\n  visibleTableColumns(tableColumns, hiddenColumns);\n\nexport class TableColumnVisibility extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hiddenColumns: props.defaultHiddenColumns || props.hiddenColumns,\n    };\n    const stateHelper = createStateHelper(this);\n\n    this.toggleColumnVisibility = stateHelper.applyFieldReducer.bind(stateHelper, 'hiddenColumns', toggleColumn);\n  }\n  getState() {\n    return {\n      ...this.state,\n      hiddenColumns: this.props.hiddenColumns || this.state.hiddenColumns,\n    };\n  }\n  notifyStateChange(nextState, state) {\n    const { hiddenColumns } = nextState;\n    const { onHiddenColumnsChange } = this.props;\n    if (onHiddenColumnsChange && hiddenColumns !== state.hiddenColumns) {\n      onHiddenColumnsChange(hiddenColumns);\n    }\n  }\n  render() {\n    const {\n      emptyMessageComponent: EmptyMessage,\n      messages,\n    } = this.props;\n    const getMessage = getMessagesFormatter(messages);\n    const { hiddenColumns } = this.getState();\n\n    return (\n      <PluginContainer\n        pluginName=\"TableColumnVisibility\"\n        dependencies={pluginDependencies}\n      >\n        <Getter name=\"hiddenColumns\" value={hiddenColumns} />\n        <Getter name=\"tableColumns\" computed={visibleTableColumnsComputed} />\n        <Action\n          name=\"toggleColumnVisibility\"\n          action={this.toggleColumnVisibility}\n        />\n\n        <Template name=\"table\">\n          {params => (\n            <TemplateConnector>\n              {({ columns }) => (columns.length === hiddenColumns.length\n                ? <EmptyMessage\n                  getMessage={getMessage}\n                  {...params}\n                />\n                : <TemplatePlaceholder />\n              )}\n            </TemplateConnector>\n          )}\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nTableColumnVisibility.propTypes = {\n  hiddenColumns: PropTypes.arrayOf(PropTypes.string),\n  defaultHiddenColumns: PropTypes.arrayOf(PropTypes.string),\n  emptyMessageComponent: PropTypes.func.isRequired,\n  onHiddenColumnsChange: PropTypes.func,\n  messages: PropTypes.object,\n};\n\nTableColumnVisibility.defaultProps = {\n  hiddenColumns: undefined,\n  defaultHiddenColumns: [],\n  onHiddenColumnsChange: undefined,\n  messages: {},\n};\n","/* globals requestAnimationFrame */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport {\n  getAnimations,\n  filterActiveAnimations,\n  evalAnimations,\n} from '@devexpress/dx-grid-core';\n\nconst TABLE_FLEX_TYPE = 'flex';\n\nconst areColumnsChanged = (prevColumns, nextColumns) => {\n  if (prevColumns.length !== nextColumns.length) return true;\n  const prevKeys = prevColumns.map(column => column.key);\n  return nextColumns.find(column =>\n    prevKeys.indexOf(column.key) === -1) !== undefined;\n};\n\nexport class TableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      animationState: new Map(),\n    };\n\n    this.animations = new Map();\n    this.tableNode = null;\n\n    this.setRef = (ref) => { if (ref) this.tableNode = ref; };\n  }\n  componentWillReceiveProps(nextProps) {\n    const { columns: nextColumns } = nextProps;\n    const { columns } = this.props;\n\n    if (areColumnsChanged(columns, nextColumns)) return;\n\n    // eslint-disable-next-line react/no-find-dom-node\n    const tableWidth = findDOMNode(this).scrollWidth;\n    this.animations = getAnimations(columns, nextColumns, tableWidth, this.animations);\n    this.processAnimationFrame();\n  }\n  getColumns() {\n    const { columns } = this.props;\n    const { animationState } = this.state;\n\n    let result = columns;\n\n    const isFixedWidth = columns.filter(column => column.width === undefined).length === 0;\n    if (isFixedWidth) {\n      result = result.slice();\n      result.push({ key: TABLE_FLEX_TYPE, type: TABLE_FLEX_TYPE });\n    }\n\n    if (animationState.size) {\n      result = result\n        .map(column => (animationState.has(column.key)\n          ? { ...column, animationState: animationState.get(column.key) }\n          : column));\n    }\n\n    return result;\n  }\n  processAnimationFrame() {\n    this.animations = filterActiveAnimations(this.animations);\n\n    if (!this.animations.size) {\n      if (this.state.animationState.size) {\n        this.setState({ animationState: new Map() });\n      }\n      return;\n    }\n\n    const animationState = evalAnimations(this.animations);\n    this.setState({ animationState });\n\n    requestAnimationFrame(this.processAnimationFrame.bind(this));\n  }\n  render() {\n    const {\n      layoutComponent: Layout,\n      minColumnWidth,\n      ...restProps\n    } = this.props;\n    const columns = this.getColumns();\n    const minWidth = columns\n      .map(column => column.width || (column.type === TABLE_FLEX_TYPE ? 0 : minColumnWidth))\n      .reduce((acc, width) => acc + width, 0);\n\n    return (\n      <Layout\n        {...restProps}\n        columns={columns}\n        minWidth={minWidth}\n      />\n    );\n  }\n}\n\nTableLayout.propTypes = {\n  columns: PropTypes.array.isRequired,\n  minColumnWidth: PropTypes.number.isRequired,\n  layoutComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class ColumnGroup extends React.PureComponent {\n  render() {\n    const { columns } = this.props;\n\n    return (\n      <colgroup>\n        {columns.map(column => (\n          <col\n            key={column.key}\n            style={column.width !== undefined\n              ? { width: `${column.width}px` }\n              : null}\n          />\n        ))}\n      </colgroup>\n    );\n  }\n}\n\nColumnGroup.propTypes = {\n  columns: PropTypes.array.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTableRowColumnsWithColSpan } from '@devexpress/dx-grid-core';\n\nconst getColumnStyle = ({ column }) => column.animationState;\n\nconst getRowStyle = ({ row }) => (row.height !== undefined\n  ? ({ height: `${row.height}px` })\n  : undefined);\n\nexport class RowLayout extends React.PureComponent {\n  render() {\n    const {\n      row,\n      columns,\n      rowComponent: Row,\n      cellComponent: Cell,\n    } = this.props;\n\n    return (\n      <Row\n        tableRow={row}\n        style={getRowStyle({ row })}\n      >\n        {\n          getTableRowColumnsWithColSpan(columns, row.colSpanStart)\n            .map(column => (\n              <Cell\n                key={column.key}\n                tableRow={row}\n                tableColumn={column}\n                style={getColumnStyle({ column })}\n                colSpan={column.colSpan}\n              />\n            ))\n        }\n      </Row>\n    );\n  }\n}\n\nRowLayout.propTypes = {\n  row: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","const OVERSCAN = 3;\n\nexport const STUB_TYPE = 'stub';\nconst VISIBLE_TYPE = 'visible';\nconst OVERSCAN_TYPE = 'overscan';\n\nconst STARTING_KEY = 'starting';\nconst ENDING_KEY = 'ending';\n\nexport const getVisibleRows = (rows, viewportTop, viewportHeight, getRowHeight) => {\n  const result = [];\n\n  const bottom = viewportTop + viewportHeight;\n  let position = 0;\n  for (let i = 0; i < rows.length; i += 1) {\n    const row = rows[i];\n    const last = result[result.length - 1];\n\n    const height = getRowHeight(row);\n    const nextPosition = position + height;\n    if (\n      (viewportTop <= position && position < bottom\n        && viewportTop < nextPosition && nextPosition <= bottom) ||\n      (viewportTop > position && nextPosition > bottom)\n    ) {\n      if (last && last.type === STUB_TYPE) {\n        rows.slice(Math.max(0, i - OVERSCAN), i).forEach((overscanRow) => {\n          const overscanRowSize = getRowHeight(overscanRow);\n          last.height -= overscanRowSize;\n          result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n        });\n      }\n      result.push({ type: VISIBLE_TYPE, height, row });\n    } else if (last && last.type === STUB_TYPE) {\n      last.height += height;\n    } else if (i > 0) {\n      rows.slice(i, i + OVERSCAN).forEach((overscanRow) => {\n        const overscanRowSize = getRowHeight(overscanRow);\n        result.push({ type: OVERSCAN_TYPE, height: overscanRowSize, row: overscanRow });\n      });\n      i += OVERSCAN - 1;\n      if (i < rows.length) {\n        result.push({ type: STUB_TYPE, key: ENDING_KEY, height: 0 });\n      }\n    } else {\n      result.push({ type: STUB_TYPE, key: STARTING_KEY, height });\n    }\n    position = nextPosition;\n  }\n\n  return result;\n};\n\nconst getRowPosition = (visibleRows, index) => visibleRows\n  .slice(0, index)\n  .reduce((acc, row) => acc + row.height, 0);\n\nexport const firstVisibleRowOffset = (prevVisibleRows, visibleRows) => {\n  const firstVisibleRowIndex = visibleRows.findIndex(row => row.type === VISIBLE_TYPE);\n  if (firstVisibleRowIndex === -1) return 0;\n\n  const firstVisibleRow = visibleRows[firstVisibleRowIndex].row;\n  const prevIndex = prevVisibleRows.findIndex(row => row.row === firstVisibleRow);\n  if (prevIndex === -1) return 0;\n\n  const position = getRowPosition(visibleRows, firstVisibleRowIndex);\n  const prevPosition = getRowPosition(prevVisibleRows, prevIndex);\n  return position - prevPosition;\n};\n","import React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowLayout } from './row-layout';\nimport {\n  getVisibleRows,\n  firstVisibleRowOffset,\n} from './virtual-table-utils';\n\nexport class VirtualTableLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleBodyRows: [],\n    };\n\n    this.rowRefs = new Map();\n    this.rowHeights = new Map();\n    this.viewportTop = 0;\n    this.updateViewport = this.updateViewport.bind(this);\n    this.registerRowRef = this.registerRowRef.bind(this);\n    this.getRowHeight = this.getRowHeight.bind(this);\n\n    this.state.visibleBodyRows = this.getVisibleRows();\n  }\n  componentDidMount() {\n    this.storeRowHeights();\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.props.headerRows !== nextProps.headerRows ||\n      this.props.rows !== nextProps.rows) {\n      const { rowHeights: prevRowHeight } = this;\n      this.rowHeights = [...nextProps.headerRows, ...nextProps.rows].reduce(\n        (acc, row) => {\n          const rowHeight = prevRowHeight.get(row.key);\n          if (rowHeight !== undefined) {\n            acc.set(row.key, rowHeight);\n          }\n          return acc;\n        },\n        new Map(),\n      );\n      this.setState({\n        visibleBodyRows: this.getVisibleRows(nextProps, this.viewportTop),\n      });\n    }\n  }\n  componentDidUpdate() {\n    this.storeRowHeights();\n  }\n  getRowHeight(row) {\n    const storedHeight = this.rowHeights.get(row.key);\n    if (storedHeight !== undefined) return storedHeight;\n    if (row.height) return row.height;\n    return this.props.estimatedRowHeight;\n  }\n  getVisibleRows({ rows, headerRows, height } = this.props, top = this.viewportTop) {\n    const headHeight = headerRows.reduce((acc, row) => acc + this.getRowHeight(row), 0);\n    return getVisibleRows(rows, top, height - headHeight, this.getRowHeight);\n  }\n  storeRowHeights() {\n    const rowsWithChangedHeights = Array.from(this.rowRefs.entries())\n      // eslint-disable-next-line react/no-find-dom-node\n      .map(([row, ref]) => [row, findDOMNode(ref).getBoundingClientRect().height])\n      .filter(([row, height]) => height !== this.getRowHeight(row));\n\n    if (rowsWithChangedHeights.length) {\n      const { rowHeights } = this;\n      rowsWithChangedHeights\n        .forEach(([row, height]) => rowHeights.set(row.key, height));\n\n      const { visibleBodyRows: prevVisibleBodyRows } = this.state;\n      const visibleBodyRows = this.getVisibleRows();\n\n      this.setState({\n        visibleBodyRows,\n      });\n\n      const scrollOffset = firstVisibleRowOffset(prevVisibleBodyRows, visibleBodyRows);\n      if (scrollOffset !== 0) {\n        // eslint-disable-next-line react/no-find-dom-node\n        findDOMNode(this).scrollTop += scrollOffset;\n      }\n    }\n  }\n  registerRowRef(row, ref) {\n    if (ref === null) {\n      this.rowRefs.delete(row);\n    } else {\n      this.rowRefs.set(row, ref);\n    }\n  }\n  updateViewport(e) {\n    const node = e.target;\n\n    // NOTE: prevent iOS to flicker in bounces\n    if (node.scrollTop < 0 ||\n      node.scrollLeft < 0 ||\n      node.scrollLeft + node.clientWidth > node.scrollWidth ||\n      node.scrollTop + node.clientHeight > node.scrollHeight) {\n      return;\n    }\n\n    if (this.viewportTop !== node.scrollTop) {\n      this.viewportTop = node.scrollTop;\n      this.setState({\n        visibleBodyRows: this.getVisibleRows(),\n      });\n    }\n  }\n  render() {\n    const {\n      headerRows, columns,\n      minWidth, height,\n      containerComponent: Container,\n      headTableComponent: HeadTable,\n      tableComponent: Table,\n      headComponent: Head,\n      bodyComponent: Body,\n      rowComponent, cellComponent,\n    } = this.props;\n    const {\n      visibleBodyRows,\n    } = this.state;\n\n    return (\n      <Container\n        style={{ height: `${height}px` }}\n        onScroll={this.updateViewport}\n      >\n        {!!headerRows.length && (\n          <HeadTable\n            style={{ minWidth: `${minWidth}px` }}\n          >\n            <ColumnGroup columns={columns} />\n            <Head>\n              {headerRows.map(row => (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              ))}\n            </Head>\n          </HeadTable>\n        )}\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          <Body>\n            {visibleBodyRows.map((visibleRow) => {\n              if (visibleRow.type === 'stub') {\n                return (\n                  <tr key={visibleRow.key} style={{ height: `${visibleRow.height}px` }} />\n                );\n              }\n              const { row } = visibleRow;\n              return (\n                <RowLayout\n                  key={row.key}\n                  ref={ref => this.registerRowRef(row, ref)}\n                  row={row}\n                  columns={columns}\n                  rowComponent={rowComponent}\n                  cellComponent={cellComponent}\n                />\n              );\n            })}\n          </Body>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nVirtualTableLayout.propTypes = {\n  minWidth: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  bodyComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  tableComponent: PropTypes.func.isRequired,\n  headTableComponent: PropTypes.func,\n  containerComponent: PropTypes.func.isRequired,\n  estimatedRowHeight: PropTypes.number.isRequired,\n};\n\nVirtualTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n  headTableComponent: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RowLayout } from './row-layout';\n\nexport class RowsBlockLayout extends React.PureComponent {\n  render() {\n    const {\n      rows,\n      columns,\n      blockComponent: Block,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Block>\n        {\n          rows\n            .map(row => (\n              <RowLayout\n                key={row.key}\n                row={row}\n                columns={columns}\n                rowComponent={rowComponent}\n                cellComponent={cellComponent}\n              />\n            ))\n        }\n      </Block>\n    );\n  }\n}\n\nRowsBlockLayout.propTypes = {\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  blockComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ColumnGroup } from './column-group';\nimport { RowsBlockLayout } from './rows-block-layout';\n\nexport class StaticTableLayout extends React.PureComponent {\n  render() {\n    const {\n      headerRows,\n      rows,\n      columns,\n      minWidth,\n      containerComponent: Container,\n      tableComponent: Table,\n      headComponent,\n      bodyComponent,\n      rowComponent,\n      cellComponent,\n    } = this.props;\n\n    return (\n      <Container>\n        <Table\n          style={{ minWidth: `${minWidth}px` }}\n        >\n          <ColumnGroup columns={columns} />\n          {!!headerRows.length && (\n            <RowsBlockLayout\n              rows={headerRows}\n              columns={columns}\n              blockComponent={headComponent}\n              rowComponent={rowComponent}\n              cellComponent={cellComponent}\n            />\n          )}\n          <RowsBlockLayout\n            rows={rows}\n            columns={columns}\n            blockComponent={bodyComponent}\n            rowComponent={rowComponent}\n            cellComponent={cellComponent}\n          />\n        </Table>\n      </Container>\n    );\n  }\n}\n\nStaticTableLayout.propTypes = {\n  headerRows: PropTypes.array,\n  rows: PropTypes.array.isRequired,\n  columns: PropTypes.array.isRequired,\n  minWidth: PropTypes.number.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  tableComponent: PropTypes.func.isRequired,\n  headComponent: PropTypes.func,\n  bodyComponent: PropTypes.func.isRequired,\n  rowComponent: PropTypes.func.isRequired,\n  cellComponent: PropTypes.func.isRequired,\n};\n\nStaticTableLayout.defaultProps = {\n  headerRows: [],\n  headComponent: () => null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DragSource } from '@devexpress/dx-react-core';\n\nexport class ItemLayout extends React.PureComponent {\n  render() {\n    const {\n      item,\n      itemComponent: Item,\n      draggingEnabled,\n      onDragEnd,\n    } = this.props;\n\n    return (draggingEnabled ? (\n      <DragSource\n        getPayload={() => [{ type: 'column', columnName: item.column.name }]}\n        onEnd={onDragEnd}\n      >\n        <Item item={item} />\n      </DragSource>\n    ) : (\n      <Item item={item} />\n    ));\n  }\n}\n\nItemLayout.propTypes = {\n  item: PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.string,\n  }).isRequired,\n  itemComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDragEnd: PropTypes.func,\n};\n\nItemLayout.defaultProps = {\n  draggingEnabled: false,\n  onDragEnd: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { findDOMNode } from 'react-dom';\nimport { DropTarget } from '@devexpress/dx-react-core';\nimport {\n  GROUP_ADD_MODE,\n  getGroupCellTargetIndex,\n} from '@devexpress/dx-grid-core';\nimport { ItemLayout } from './group-panel-layout/item-layout';\n\nexport class GroupPanelLayout extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    };\n\n    this.onEnter = ({ payload }) => {\n      this.setState({\n        sourceColumnName: payload[0].columnName,\n      });\n    };\n    this.onOver = ({ clientOffset }) => {\n      const { onDraftGroup, items } = this.props;\n      const { sourceColumnName, targetItemIndex: prevTargetItemIndex } = this.state;\n      // eslint-disable-next-line react/no-find-dom-node\n      const itemGeometries = this.itemRefs.map(ref => findDOMNode(ref).getBoundingClientRect());\n      const sourceItemIndex = items.findIndex(({ column }) => column.name === sourceColumnName);\n      const targetItemIndex = getGroupCellTargetIndex(\n        itemGeometries,\n        sourceItemIndex,\n        clientOffset,\n      );\n\n      if (prevTargetItemIndex === targetItemIndex) return;\n\n      onDraftGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n      this.setState({ targetItemIndex });\n    };\n    this.onLeave = () => {\n      const { onDraftGroup, items } = this.props;\n      const { sourceColumnName } = this.state;\n      const sourceItem = items.filter(({ column }) => column.name === sourceColumnName)[0];\n      if (sourceItem && sourceItem.draft === GROUP_ADD_MODE) {\n        this.resetState();\n        return;\n      }\n      onDraftGroup({\n        columnName: sourceColumnName,\n        groupIndex: -1,\n      });\n      this.setState({\n        targetItemIndex: -1,\n      });\n    };\n    this.onDrop = () => {\n      const { onGroup } = this.props;\n      const { sourceColumnName, targetItemIndex } = this.state;\n      this.resetState();\n      onGroup({\n        columnName: sourceColumnName,\n        groupIndex: targetItemIndex,\n      });\n    };\n    this.onDragEnd = () => {\n      const { sourceColumnName, targetItemIndex } = this.state;\n      const { onGroup } = this.props;\n      if (sourceColumnName && targetItemIndex === -1) {\n        onGroup({\n          columnName: sourceColumnName,\n        });\n      }\n      this.resetState();\n    };\n  }\n  resetState() {\n    const { onCancelDraftGroup } = this.props;\n    onCancelDraftGroup();\n    this.setState({\n      sourceColumnName: null,\n      targetItemIndex: -1,\n    });\n  }\n  render() {\n    const {\n      items,\n      emptyMessageComponent: EmptyMessage,\n      containerComponent: Container,\n      itemComponent: Item,\n      draggingEnabled,\n    } = this.props;\n\n    this.itemRefs = [];\n\n    const groupPanel = (items.length ? (\n      <Container>\n        {items.map(item => (\n          <ItemLayout\n            key={item.column.name}\n            ref={element => element && this.itemRefs.push(element)}\n            item={item}\n            itemComponent={Item}\n            draggingEnabled={draggingEnabled}\n            onDragEnd={this.onDragEnd}\n          />\n        ))}\n      </Container>\n    ) : (\n      <EmptyMessage />\n    ));\n\n    return draggingEnabled\n      ? (\n        <DropTarget\n          onEnter={this.onEnter}\n          onOver={this.onOver}\n          onLeave={this.onLeave}\n          onDrop={this.onDrop}\n        >\n          {groupPanel}\n        </DropTarget>\n      )\n      : groupPanel;\n  }\n}\n\nGroupPanelLayout.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    column: PropTypes.object,\n    draft: PropTypes.string,\n  })).isRequired,\n  onGroup: PropTypes.func,\n  itemComponent: PropTypes.func.isRequired,\n  containerComponent: PropTypes.func.isRequired,\n  emptyMessageComponent: PropTypes.func.isRequired,\n  draggingEnabled: PropTypes.bool,\n  onDraftGroup: PropTypes.func,\n  onCancelDraftGroup: PropTypes.func,\n};\n\nGroupPanelLayout.defaultProps = {\n  onGroup: () => {},\n  draggingEnabled: false,\n  onDraftGroup: () => {},\n  onCancelDraftGroup: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Template,\n  PluginContainer,\n  TemplatePlaceholder,\n} from '@devexpress/dx-react-core';\n\nexport class Toolbar extends React.PureComponent {\n  render() {\n    const {\n      rootComponent: Root,\n      flexibleSpaceComponent: FlexibleSpaceComponent,\n    } = this.props;\n    return (\n      <PluginContainer\n        pluginName=\"Toolbar\"\n      >\n        <Template name=\"header\">\n          <Root>\n            <TemplatePlaceholder name=\"toolbarContent\" />\n          </Root>\n          <TemplatePlaceholder />\n        </Template>\n        <Template name=\"toolbarContent\">\n          <FlexibleSpaceComponent />\n        </Template>\n      </PluginContainer>\n    );\n  }\n}\n\nToolbar.propTypes = {\n  rootComponent: PropTypes.func.isRequired,\n  flexibleSpaceComponent: PropTypes.func.isRequired,\n};\n"],"names":["GridCore","props","rows","columns","getRowId","getCellValue","Root","rootComponent","rowIdGetter","cellValueGetter","React","PureComponent","propTypes","PropTypes","array","isRequired","func","defaultProps","undefined","Grid","children","oneOfType","arrayOf","node","pluginDependencies","pluginName","ColumnChooser","state","handleToggle","bind","handleHide","buttonRef","button","setState","visible","Overlay","overlayComponent","Container","containerComponent","Item","itemComponent","ToggleButton","toggleButtonComponent","messages","getMessage","getMessagesFormatter","hiddenColumns","toggleColumnVisibility","map","item","column","name","object","createStateHelper","component","lastStateUpdater","initialState","applyReducer","reduce","payload","callback","stateUpdater","prevState","getState","nextState","notifyStateChange","applyFieldReducer","field","FilteringState","defaultFilters","stateHelper","setColumnFilter","filters","onFiltersChange","IntegratedFiltering","columnExtensions","getColumnPredicate","getColumnExtension","columnName","predicate","rowsComputed","isGroupRow","getRowLevelKey","filteredRows","EditingState","defaultEditingRows","defaultAddedRows","defaultChangedRows","defaultDeletedRows","startEditRows","stopEditRows","changeRow","cancelChangedRows","cancelChanges","commitChangedRows","rowIds","onCommitChanges","changedRowsByIds","changedRows","addRow","changeAddedRow","cancelAddedRows","commitAddedRows","addedRowsByIds","addedRows","deleteRows","cancelDeletedRows","commitDeletedRows","deleted","editingRows","deletedRows","onEditingRowsChange","onChangedRowsChange","onAddedRowsChange","onDeletedRowsChange","createRowChange","createRowChangeGetter","PagingState","defaultCurrentPage","defaultPageSize","setCurrentPage","setPageSize","currentPage","pageSize","onCurrentPageChange","onPageSizeChange","number","clamp","value","max","Math","min","rowsWithHeadersComputed","rowsWithPageHeaders","totalCountComputed","rowCount","paginatedRowsComputed","paginatedRows","currentPageComputed","totalCount","totalPages","pageCount","adjustedCurrentPage","IntegratedPaging","CustomPaging","dependencies","optional","adjustSortIndex","sortIndex","grouping","sorting","slice","acc","columnGrouping","columnSortingIndex","findIndex","columnSorting","GroupingState","defaultGrouping","defaultExpandedGroups","groupByColumn","toggleGroupExpanded","toggleExpandedGroups","draftGroupingChange","cancelGroupingChange","setColumnSorting","expandedGroups","keepOther","restParams","groupingIndex","getters","actions","groupIndex","prevGrouping","prevGroupingIndex","length","onGroupingChange","onExpandedGroupsChange","groupingChange","draftGrouping","Set","expandedGroupedRowsComputed","expandedGroupRows","IntegratedGrouping","getColumnCriteria","criteria","groupedRowsComputed","groupedRows","groupRowChecker","groupRowLevelKeyGetter","getRowIdComputed","customGroupingRowIdGetter","CustomGrouping","getChildGroups","appliedGrouping","appliedExpandedGroups","customGroupedRows","SelectionState","defaultSelection","toggleSelection","setRowsSelection","selection","onSelectionChange","IntegratedSelection","availableToSelect","toggleSelectAll","select","selected","getAvailableToSelect","allSelectedComputed","allSelected","someSelectedComputed","someSelected","SortingState","defaultSorting","onSortingChange","IntegratedSorting","getColumnCompare","compare","sortedRows","getTargetColumns","filter","type","find","DragDropProvider","change","clientOffset","Column","columnComponent","tableHeaderRowsComputed","tableHeaderRows","tableHeaderRowsWithReordering","TableColumnReordering","defaultOrder","order","onOver","handleOver","onLeave","handleLeave","onDrop","handleDrop","sourceColumnIndex","targetColumnIndex","draftOrderComputed","getDraftOrder","cellDimensionGetters","cellDimensions","getAvailableColumns","tableColumn","data","TABLE_DATA_TYPE","x","sourceColumnName","availableColumns","relativeSourceColumnIndex","indexOf","cacheCellDimensions","overlappedColumns","left","right","relativeTargetIndex","getTableTargetColumnIndex","prevSourceColumnIndex","prevTargetColumnIndex","draftOrder","resetCellDimensions","onOrderChange","nextOrder","changeColumnOrder","tableContainerComponent","Row","rowComponent","Cell","cellComponent","columnsComputed","tableColumns","orderedColumns","params","tableRow","TABLE_REORDERING_TYPE","storeCellDimensionsGetter","fn","string","RowPlaceholder","CellPlaceholder","tableBodyRowsComputed","tableRowsWithDataRows","Table","Layout","layoutComponent","NoDataRow","noDataRowComponent","NoDataCell","noDataCellComponent","StubCell","stubCellComponent","StubHeaderCell","stubHeaderCellComponent","tableColumnsComputed","tableColumnsWithDataRows","headerRows","bodyRows","tableBodyRows","isHeaderStubTableCell","isDataTableCell","row","isNoDataTableRow","isDataTableRow","TableSelection","highlightRow","selectByRowClick","showSelectionColumn","showSelectAll","HeaderCell","headerCellComponent","selectionColumnWidth","tableColumnsWithSelection","isSelectAllTableCell","selectAllAvailable","isSelectTableCell","has","rowId","bool","RowDetailState","defaultExpandedRows","setDetailRowExpanded","expandedRows","onExpandedRowsChange","TableRowDetail","rowHeight","Content","contentComponent","ToggleCell","toggleCellComponent","toggleColumnWidth","tableColumnsWithDetail","tableRowsWithExpandedDetail","isDetailToggleTableCell","isDetailRowExpanded","isDetailTableRow","tableRowsWithGrouping","showColumnWhenGroupedGetter","showColumnsWhenGrouped","columnExtension","showWhenGrouped","TableGroupRow","GroupCell","GroupRow","GroupIndentCell","indentCellComponent","indentColumnWidth","tableColumnsWithGrouping","isGroupTableCell","compoundKey","groupKey","isGroupIndentTableCell","isGroupTableRow","tableRowsWithHeading","TableHeaderRow","showSortingControls","showGroupingControls","HeaderRow","isHeadingTableCell","draggingEnabled","tableColumnResizingEnabled","changeTableColumnWidths","changeDraftTableColumnWidths","atLeastOneDataColumn","getColumnSortingDirection","direction","shift","shifts","isHeadingTableRow","TableFilterRow","FilterCell","FilterRow","tableHeaderRowsWithFilter","isFilterTableCell","getColumnFilterConfig","onFilter","config","newValue","isFilterTableRow","any","TableEditRow","EditCell","EditRow","tableRowsWithEditing","isEditTableCell","isNew","isAddedTableRow","changedRow","getRowChange","onValueChange","changeArgs","isEditTableRow","TableEditColumn","Command","commandComponent","showAddCommand","showEditCommand","showDeleteCommand","width","tableColumnsWithEditing","isHeadingEditCommandsTableCell","isEditCommandsTableCell","isEdit","isEditing","TableColumnResizing","defaultColumnWidths","changeTableColumnWidthsAction","changeDraftTableColumnWidthsAction","columnWidths","onColumnWidthsChange","draftColumnWidths","tableColumnsWithWidths","objectOf","PagingPanel","Pager","pageSizes","GroupingPanel","EmptyMessage","emptyMessageComponent","EmptyMessagePlaceholder","ItemPlaceholder","groupingPanelItems","DataTypeProvider","columnNames","for","Formatter","formatterComponent","Editor","editorComponent","includes","visibleTableColumnsComputed","visibleTableColumns","TableColumnVisibility","defaultHiddenColumns","toggleColumn","onHiddenColumnsChange","TABLE_FLEX_TYPE","areColumnsChanged","prevColumns","nextColumns","prevKeys","key","TableLayout","Map","animations","tableNode","setRef","ref","nextProps","tableWidth","findDOMNode","scrollWidth","getAnimations","processAnimationFrame","animationState","result","isFixedWidth","push","size","get","filterActiveAnimations","evalAnimations","minColumnWidth","restProps","getColumns","minWidth","ColumnGroup","getColumnStyle","getRowStyle","height","RowLayout","colSpanStart","colSpan","OVERSCAN","STUB_TYPE","VISIBLE_TYPE","OVERSCAN_TYPE","STARTING_KEY","ENDING_KEY","getVisibleRows","viewportTop","viewportHeight","getRowHeight","bottom","position","i","last","nextPosition","forEach","overscanRow","overscanRowSize","getRowPosition","visibleRows","index","firstVisibleRowOffset","prevVisibleRows","firstVisibleRowIndex","firstVisibleRow","prevIndex","prevPosition","VirtualTableLayout","rowRefs","rowHeights","updateViewport","registerRowRef","visibleBodyRows","storeRowHeights","prevRowHeight","set","storedHeight","estimatedRowHeight","top","headHeight","rowsWithChangedHeights","Array","from","entries","getBoundingClientRect","prevVisibleBodyRows","scrollOffset","scrollTop","delete","e","target","scrollLeft","clientWidth","clientHeight","scrollHeight","HeadTable","headTableComponent","tableComponent","Head","headComponent","Body","bodyComponent","visibleRow","RowsBlockLayout","Block","blockComponent","StaticTableLayout","ItemLayout","onDragEnd","shape","GroupPanelLayout","onEnter","onDraftGroup","items","prevTargetItemIndex","targetItemIndex","itemGeometries","itemRefs","sourceItemIndex","getGroupCellTargetIndex","sourceItem","draft","GROUP_ADD_MODE","resetState","onGroup","onCancelDraftGroup","groupPanel","element","Toolbar","FlexibleSpaceComponent","flexibleSpaceComponent"],"mappings":"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"}